# TEST HELPERS
#
# Helper functions that run the tests. See the below list for a quick reference
# of all functions defined here (listed in declared order).
#
#   `is_pathname'
#   `clean_tree'
#   `run_test'
#   `run_tests'
#   `stop'
#   `throw'
#
# @author Adam Smith <adam@imaginate.life> (http://imaginate.life)
# @copyright 2017 Adam A Smith <adam@imaginate.life> (http://imaginate.life)
################################################################################

############################################################
# @func is_pathname
# @use is_pathname PATH
# @return
#   0  PASS
############################################################
is_pathname()
{
  local path="${1%/}"
  local name="${path##*/}"

  if [[ -n "${path}"      ]] && \
     [[ "${name}" != '*'  ]] && \
     [[ "${name}" != '.*' ]] 
  then
    return 0
  fi
  return 1
}
declare -f -r is_pathname

############################################################
# @func clean_tree
# @use clean_tree DIR
# @return
#   0  PASS
############################################################
clean_tree()
{
  local path

  for path in "${1}"/* "${1}"/.*; do
    if ! is_pathname "${path}"; then
      continue
    fi
    if [[ -d "${path}" ]]; then
      clean_tree "${path}"
    elif [[ -f "${path}" ]]; then
      rm -f -- "${path}"
    fi
  done
  return 0
}
declare -f -r clean_tree

############################################################
# @func run_test
# @use run_test SECTION
# @return
#   0  PASS
############################################################
run_test()
{
  if [[ ! -r "${1}.test" ]]; then
    stop "invalid SECTION \`${1}' tests stopped"
  fi

  clean_tree "${DUMMY}"
  TEST_ERRORS=()
  source "${1}.test"
  section "${1}"
  clean_tree "${DUMMY}"
  return 0
}
declare -f -r run_test

############################################################
# @func run_tests
# @use run_tests ...PATH|SECTION
# @return
#   0  PASS
############################################################
run_tests()
{
  local path
  local name

  for path in "${@}"; do
    name="${path##*/}"
    name="${name%.test}"
    run_test "${name}"
  done
  return 0
}
declare -f -r run_tests

############################################################
# Prints an error message and aborts the tests.
#
# @func stop
# @use stop [...MSG]
# @exit
#   1  FAIL
############################################################
stop()
{
  stop_row "${*}"
  footer
  exit 1
}
declare -f -r stop

############################################################
# @func throw
# @use throw [...MSG]
# @return
#   0  PASS
############################################################
throw()
{
  TEST_ERRORS[${#TEST_ERRORS[@]}]=( "${*}" )
  TESTS_FAILED=$(( TESTS_FAILED + 1 ))
  return 0
}
declare -f -r -x throw

